version: '3'
services:
  chat_web_database:
    image: mongodb/mongodb-community-server:latest
    container_name: chat_web_database_container
    ports:
      - "7017:27017"
    volumes:
      - /database/mongod.conf:/etc/mongod.conf
      - ./database/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - mongo-data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - chat_network
  chat_web_backend:
    build: ./backend
    ports:
      - "3000:3000"
    container_name: chat_web_backend_container
    depends_on:
      - chat_web_database
    volumes:
      - ./backend:/app
    environment:
      - HOST_NAME=${HOST_NAME}
      - MONGODB_URL=${MONGODB_URL}
    networks:
      - chat_network
  chat_web_frontend:
    build: ./frontend
    ports:
      - "8080:80"
    container_name: chat_web_frontend_container
    volumes:
      - ./frontend:/usr/share/nginx/html
    environment:
      - HOST_NAME=${HOST_NAME}
    networks:
      - chat_network
  # mongo_express:
  #   image: mongo-express
  #   container_name: mongo_express_container
  #   ports:
  #     - "8081:8081"
  #   environment:
  #     - ME_CONFIG_MONGODB_ADMINUSERNAME=${ME_CONFIG_MONGODB_ADMINUSERNAME}
  #     - ME_CONFIG_MONGODB_ADMINPASSWORD=${ME_CONFIG_MONGODB_ADMINPASSWORD}
  #     - ME_CONFIG_BASICAUTH_USERNAME=${ME_CONFIG_BASICAUTH_USERNAME}
  #     - ME_CONFIG_BASICAUTH_PASSWORD=${ME_CONFIG_BASICAUTH_PASSWORD}
  #     - ME_CONFIG_MONGODB_SERVER=${ME_CONFIG_MONGODB_SERVER}
  #   depends_on:
  #     - chat_web_database
  #   networks:
  #     - chat_network
volumes:
  mongo-data:

networks:
  chat_network: